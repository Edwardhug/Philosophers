// void have_eat(t_philo *philo)
// {
// 	int	i;
// 	int	count;

// 	while (philo_must_continue(philo))
// 	{
// 		i = 0;
// 		count = 0;
// 		while (i < philo->var->number_of_philo)
// 		{
// 			pthread_mutex_lock(&philo->var->global_mut);
// 			if (philo->var->philo[i].number_of_meal == philo->number_of_meal)
// 				count++;
// 			pthread_mutex_unlock(&philo->var->global_mut);
// 			i++;
// 		}
// 		if (count == philo->var->number_of_philo)
// 			return ;
// 	}
// }

routine_philo.c ligne 38 if (philo->number % 2 == 1 || (philo->var->number_of_philo % 2 == 1 ))
init_thread ligne 60 usleep(10);
